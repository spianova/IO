public interface Handler {
    void setNext(Handler nextHandler);
    void handle(String request);
}


public abstract class BaseHandler implements Handler{
    protected Handler nextHandler;

    @Override
    public void setNext(Handler nextHandler) {
        this.nextHandler = nextHandler;
    }

    @Override
    public abstract void handle(String request);
}


public class AvailabilityHandler extends BaseHandler{
    @Override
    public void handle(String request) {
        if (request.contains("dostepnosc")){
            System.out.println("sprawdzanie dostepnosci kwiatow...");
        }else if (nextHandler != null){
            nextHandler.handle(request);
        }
    }
}


public class CareHandler extends BaseHandler{
    @Override
    public void handle(String request) {
        if(request.contains("pielegnacja")){
            System.out.println("informacje o pielegnacji kwiatow...");
        }else if(nextHandler != null){
            nextHandler.handle(request);
        }
    }
}


public class IdentificationHandler extends BaseHandler{
    @Override
    public void handle(String request) {
        if (request.contains("identyfikacja")) {
            System.out.println("identyfikacja gatunku kwiatu...");
        } else if (nextHandler != null) {
            nextHandler.handle(request);
        }
    }
}


public class Main {
    public static void main(String[] args) {
        Handler availability = new AvailabilityHandler();
        Handler care = new CareHandler();
        Handler identification = new IdentificationHandler();

        availability.setNext(care);
        care.setNext(identification);

        availability.handle("czy dostepnosc tych kwiatow jest na stanie?");
        availability.handle("jak wyglada pielegnacja tych kwiatow?");
        availability.handle("prosze o identyfikacja tego kwiatu");
    }
}
